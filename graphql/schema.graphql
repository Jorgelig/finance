"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

scalar Json @scalar(class: "MLL\\GraphQLScalars\\JSON")

type Category {
    id: ID!
    name: String!
    type: String!
}

type Brand {
    id: ID!
    name: String!
    category: Category @belongsTo
}

type Transaction {
    id: ID!
    amount: Float!
    brand: Brand! @belongsTo
    created_at: Date!
}

type TransactionStatistics {
    category_id: Int!
    total: Float!
    category: Category
}

type Sms {
    id: ID!
    body: String!
    transaction_id: Int
    meta: Json
}

type Query {
    transactions: [Transaction!]! @paginate(defaultCount: 25) @orderBy(column: id direction: DESC)

    allBrands: [Brand!]! @all
    brands: [Brand!]! @paginate(defaultCount: 25) @orderBy(column: id direction: DESC)

    allCategories: [Category!]! @all
    categories: [Category!]! @paginate(defaultCount: 25) @orderBy(column: id direction: DESC)

    sms: [Sms!]! @paginate(defaultCount: 100) @orderBy(column: transaction_id direction: ASC)

    totalExpenses: Float! @aggregate(model: Transaction column: amount function: SUM scopes:["expenses"])
    totalIncome: Float! @aggregate(model: Transaction column: amount function: SUM scopes: ["income"])
    expensesPerCategory: Float! @aggregate(model: Transaction column: amount function: SUM scopes: ["income"])
}

type Mutation {
  createTransaction(amount: Float! brand_id: Int! created_at: String!): Transaction @create
  updateTransaction(id: ID! amount: Float! brand_id: Int! created_at: String!): Transaction @update
  deleteTransaction(id: ID!): Transaction @delete
  
  createBrand(name: String! category_id: Int!): Brand @create
  updateBrand(id: ID! name: String! category_id: Int!): Brand @update
  deleteBrand(id: ID!): Brand @delete
  
  createCategory(name: String! type: String!): Category @create
  updateCategory(id: ID! name: String! type: String!): Category @update
  deleteCategory(id: ID!): Category @delete
  
  createSms(body: String!): [Sms]
  updateSms(id: ID! body: String!): Sms
  deleteSms(id: ID!): Sms @delete
}